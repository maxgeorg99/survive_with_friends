// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.2.0 (commit fb41e50eb73573b70eea532aeb6158eaac06fae0).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
// A namespace for generated variants and helper functions.
export namespace CurseType {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type MonsterMoreHp = { tag: "MonsterMoreHp" };
  export type MonsterMoreDamage = { tag: "MonsterMoreDamage" };
  export type MonsterMoreSpeed = { tag: "MonsterMoreSpeed" };
  export type MonsterHealthRegen = { tag: "MonsterHealthRegen" };
  export type CursedMonstersSpawn = { tag: "CursedMonstersSpawn" };
  export type NoFreeReroll = { tag: "NoFreeReroll" };
  export type NoHealOnLevelUp = { tag: "NoHealOnLevelUp" };
  export type NegativeHealthRegen = { tag: "NegativeHealthRegen" };
  export type PlayersStartLessHp = { tag: "PlayersStartLessHp" };
  export type PlayersStartLessSpeed = { tag: "PlayersStartLessSpeed" };
  export type NoDiceDrops = { tag: "NoDiceDrops" };
  export type NoFoodDrops = { tag: "NoFoodDrops" };
  export type NoBoosterPackDrops = { tag: "NoBoosterPackDrops" };
  export type NoStructureLoot = { tag: "NoStructureLoot" };
  export type OneLessVoidChest = { tag: "OneLessVoidChest" };
  export type OneLessVoidChestSecond = { tag: "OneLessVoidChestSecond" };
  export type MonstersDropFewerGems = { tag: "MonstersDropFewerGems" };
  export type BossAppearsSooner = { tag: "BossAppearsSooner" };
  export type DeadlierBosses = { tag: "DeadlierBosses" };
  export type DeadlierBossesTwo = { tag: "DeadlierBossesTwo" };
  export type Scaling = { tag: "Scaling" };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const MonsterMoreHp = { tag: "MonsterMoreHp" };
  export const MonsterMoreDamage = { tag: "MonsterMoreDamage" };
  export const MonsterMoreSpeed = { tag: "MonsterMoreSpeed" };
  export const MonsterHealthRegen = { tag: "MonsterHealthRegen" };
  export const CursedMonstersSpawn = { tag: "CursedMonstersSpawn" };
  export const NoFreeReroll = { tag: "NoFreeReroll" };
  export const NoHealOnLevelUp = { tag: "NoHealOnLevelUp" };
  export const NegativeHealthRegen = { tag: "NegativeHealthRegen" };
  export const PlayersStartLessHp = { tag: "PlayersStartLessHp" };
  export const PlayersStartLessSpeed = { tag: "PlayersStartLessSpeed" };
  export const NoDiceDrops = { tag: "NoDiceDrops" };
  export const NoFoodDrops = { tag: "NoFoodDrops" };
  export const NoBoosterPackDrops = { tag: "NoBoosterPackDrops" };
  export const NoStructureLoot = { tag: "NoStructureLoot" };
  export const OneLessVoidChest = { tag: "OneLessVoidChest" };
  export const OneLessVoidChestSecond = { tag: "OneLessVoidChestSecond" };
  export const MonstersDropFewerGems = { tag: "MonstersDropFewerGems" };
  export const BossAppearsSooner = { tag: "BossAppearsSooner" };
  export const DeadlierBosses = { tag: "DeadlierBosses" };
  export const DeadlierBossesTwo = { tag: "DeadlierBossesTwo" };
  export const Scaling = { tag: "Scaling" };

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant("MonsterMoreHp", AlgebraicType.createProductType([])),
      new SumTypeVariant("MonsterMoreDamage", AlgebraicType.createProductType([])),
      new SumTypeVariant("MonsterMoreSpeed", AlgebraicType.createProductType([])),
      new SumTypeVariant("MonsterHealthRegen", AlgebraicType.createProductType([])),
      new SumTypeVariant("CursedMonstersSpawn", AlgebraicType.createProductType([])),
      new SumTypeVariant("NoFreeReroll", AlgebraicType.createProductType([])),
      new SumTypeVariant("NoHealOnLevelUp", AlgebraicType.createProductType([])),
      new SumTypeVariant("NegativeHealthRegen", AlgebraicType.createProductType([])),
      new SumTypeVariant("PlayersStartLessHp", AlgebraicType.createProductType([])),
      new SumTypeVariant("PlayersStartLessSpeed", AlgebraicType.createProductType([])),
      new SumTypeVariant("NoDiceDrops", AlgebraicType.createProductType([])),
      new SumTypeVariant("NoFoodDrops", AlgebraicType.createProductType([])),
      new SumTypeVariant("NoBoosterPackDrops", AlgebraicType.createProductType([])),
      new SumTypeVariant("NoStructureLoot", AlgebraicType.createProductType([])),
      new SumTypeVariant("OneLessVoidChest", AlgebraicType.createProductType([])),
      new SumTypeVariant("OneLessVoidChestSecond", AlgebraicType.createProductType([])),
      new SumTypeVariant("MonstersDropFewerGems", AlgebraicType.createProductType([])),
      new SumTypeVariant("BossAppearsSooner", AlgebraicType.createProductType([])),
      new SumTypeVariant("DeadlierBosses", AlgebraicType.createProductType([])),
      new SumTypeVariant("DeadlierBossesTwo", AlgebraicType.createProductType([])),
      new SumTypeVariant("Scaling", AlgebraicType.createProductType([])),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: CurseType): void {
      CurseType.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): CurseType {
      return CurseType.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

// The tagged union or sum type for the algebraic type `CurseType`.
export type CurseType = CurseType.MonsterMoreHp | CurseType.MonsterMoreDamage | CurseType.MonsterMoreSpeed | CurseType.MonsterHealthRegen | CurseType.CursedMonstersSpawn | CurseType.NoFreeReroll | CurseType.NoHealOnLevelUp | CurseType.NegativeHealthRegen | CurseType.PlayersStartLessHp | CurseType.PlayersStartLessSpeed | CurseType.NoDiceDrops | CurseType.NoFoodDrops | CurseType.NoBoosterPackDrops | CurseType.NoStructureLoot | CurseType.OneLessVoidChest | CurseType.OneLessVoidChestSecond | CurseType.MonstersDropFewerGems | CurseType.BossAppearsSooner | CurseType.DeadlierBosses | CurseType.DeadlierBossesTwo | CurseType.Scaling;

export default CurseType;


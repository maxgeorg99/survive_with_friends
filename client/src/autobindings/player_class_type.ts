// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
// A namespace for generated variants and helper functions.
export namespace PlayerClass {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type Fighter = { tag: "Fighter" };
  export type Rogue = { tag: "Rogue" };
  export type Mage = { tag: "Mage" };
  export type Paladin = { tag: "Paladin" };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const Fighter = { tag: "Fighter" };
  export const Rogue = { tag: "Rogue" };
  export const Mage = { tag: "Mage" };
  export const Paladin = { tag: "Paladin" };

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant("Fighter", AlgebraicType.createProductType([])),
      new SumTypeVariant("Rogue", AlgebraicType.createProductType([])),
      new SumTypeVariant("Mage", AlgebraicType.createProductType([])),
      new SumTypeVariant("Paladin", AlgebraicType.createProductType([])),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: PlayerClass): void {
      PlayerClass.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): PlayerClass {
      return PlayerClass.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

// The tagged union or sum type for the algebraic type `PlayerClass`.
export type PlayerClass = PlayerClass.Fighter | PlayerClass.Rogue | PlayerClass.Mage | PlayerClass.Paladin;

export default PlayerClass;

